rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isAdmin() {
      return isAuthenticated() && 
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }
    
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    // Users collection
    match /users/{userId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated();
      allow update: if isAdmin() || isOwner(userId);
      allow delete: if isAdmin();
    }

    // Courses collection
    match /courses/{courseId} {
  allow read: if isAuthenticated();
  allow write: if isAuthenticated(); // Allow all authenticated users to write

    }

    // Enrolled courses collection
    match /enrolledCourses/{enrollmentId} {
      allow read: if isAuthenticated(); // You can refine this for ownership
      allow create: if isAuthenticated();
      allow update: if isAuthenticated() && 
                   (request.auth.uid == resource.data.userId || isAdmin());
      allow delete: if isAdmin();
    }

    // Leaderboard collection
    match /leaderboard/{entryId} {
      allow read: if isAuthenticated();
      allow write: if isAdmin();
    }

    // Announcements collection
    match /announcements/{announcementId} {
      allow read: if isAuthenticated();
      allow write: if isAdmin();
    }
  }
}